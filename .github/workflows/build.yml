name: Build
on: [pull_request, push]
jobs:
  build:
    name: "Build"
    runs-on: ubuntu-24.04
    steps:
      - name: "Checkout sources"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Setup matchers"
        run: |
          echo '::add-matcher::${{ github.workspace }}/.github/matchers/gcc-problem-matcher.json'
          echo '::add-matcher::${{ github.workspace }}/.github/matchers/vala-problem-matcher.json'
          echo '::add-matcher::${{ github.workspace }}/.github/matchers/meson-problem-matcher.json'
      - name: "Setup dependencies"
        run: |
          sudo apt-get update
          sudo apt-get remove libunwind-14-dev
          sudo apt-get install -y build-essential gettext libadwaita-1-dev libcanberra-dev libgcrypt20-dev libgee-0.8-dev libgpgme-dev libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev libgtk-4-dev libnice-dev libnotify-dev libqrencode-dev libsignal-protocol-c-dev libsoup-3.0-dev libsqlite3-dev libsrtp2-dev libwebrtc-audio-processing-dev meson valac
      - name: "Configure"
        run: meson setup build
      - name: "Build"
        run: meson compile -C build
      - name: "Test"
        run: meson test -C build
  build-flatpak:
    name: "Build flatpak"
    runs-on: ubuntu-24.04
    container:
      image: bilelmoussaoui/flatpak-github-actions:gnome-46
      options: --privileged
    steps:
      - name: "Checkout sources"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Build"
        uses: flathub-infra/flatpak-github-actions/flatpak-builder@master
        with:
          manifest-path: im.dino.Dino.json
          bundle: im.dino.Dino.flatpak
  build-windows:
    name: "Build Windows"
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      matrix:
        include:
          - { sys: ucrt64,  env: ucrt-x86_64 }
          - { sys: clangarm64, env: clang-aarch64 }
    steps:
      - shell: powershell
        run: git config --global core.autocrlf input
      - name: "Checkout sources"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Setup MSYS2"
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          update: true
          install: >-
            git
            make
            zip
            unzip
            curl
            mingw-w64-${{matrix.env}}-toolchain
            mingw-w64-${{matrix.env}}-gcc
            mingw-w64-${{matrix.env}}-cmake
            mingw-w64-${{matrix.env}}-ninja
            mingw-w64-${{matrix.env}}-libsoup3
            mingw-w64-${{matrix.env}}-gtk4
            mingw-w64-${{matrix.env}}-sqlite3
            mingw-w64-${{matrix.env}}-gobject-introspection
            mingw-w64-${{matrix.env}}-glib2
            mingw-w64-${{matrix.env}}-glib-networking
            mingw-w64-${{matrix.env}}-openssl
            mingw-w64-${{matrix.env}}-libgcrypt
            mingw-w64-${{matrix.env}}-libgee
            mingw-w64-${{matrix.env}}-vala
            mingw-w64-${{matrix.env}}-gsettings-desktop-schemas
            mingw-w64-${{matrix.env}}-qrencode
            mingw-w64-${{matrix.env}}-ntldd-git
            mingw-w64-${{matrix.env}}-gpgme
            mingw-w64-${{matrix.env}}-libadwaita
            mingw-w64-${{matrix.env}}-gspell
            mingw-w64-${{matrix.env}}-enchant
            mingw-w64-${{matrix.env}}-hunspell
            mingw-w64-${{matrix.env}}-iso-codes
            mingw-w64-${{matrix.env}}-gst-plugins-base
            mingw-w64-${{matrix.env}}-gst-plugins-good
            mingw-w64-${{matrix.env}}-gst-plugins-bad
            mingw-w64-${{matrix.env}}-cppwinrt
            mingw-w64-${{matrix.env}}-meson
            mingw-w64-${{matrix.env}}-webrtc-audio-processing-1
      - name: "Setup installer"
        if: success() && ${{matrix.sys}} != 'clangarm64'
        run: pacman -S --needed --noconfirm mingw-w64-${{matrix.env}}-nsis
      - name: "Setup matchers"
        run: |
          echo '::add-matcher::${{ github.workspace }}/.github/matchers/gcc-problem-matcher.json'
          echo '::add-matcher::${{ github.workspace }}/.github/matchers/vala-problem-matcher.json'
          echo '::add-matcher::${{ github.workspace }}/.github/matchers/meson-problem-matcher.json'
      - name: "Configure"
        run: meson setup build
      - name: "Build"
        run: meson compile -C build
      - name: "Test"
        run: meson test -C build